// This is the source code for password.c, except a few
//  things have been removed - see the ...
//
// You are supposed to use a buffer overflow to type something
//  for the password that will get you through.
//
// Note that the scanf's are NOT safe.

// You fill this in...

// Password you typed: pppppppppppppppp
// The secret: 314159
// Why does it work? by inputing a long enough string, scanf will scan in past the allocated memory. this will corrupt other memory, and if long enough will corrupt correct to a non zero value.

// Note - feel free to ask the internet about buffer overflows.


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char *argv[]) {

  int correct = 0;
  char s[12];
  printf("Password: ");
  scanf("%s", s);

  // checking the string to see if it's the password
  if (strcmp(s, "314159") == 0)
    correct = 1;

  while (! correct) {
    printf("Not correct.\n");
    printf("Password: ");
    scanf("%s", s);
    if (strcmp(s, "314159") == 0) // check the password
      correct = 1;
  }

  int answer = 314159; // the secret
  printf("The secret answer is: %d\n", answer);
  
  return 0;
}
